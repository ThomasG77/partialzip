name: Rust

permissions:
  contents: write

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v[0-9]+.*'
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: taiki-e/install-action@cargo-hack
    - name: Cargo hack build
      run: cargo hack --each-feature build --verbose
    - name: Cargo hack test
      run: cargo clean && cargo hack --each-feature test --verbose
    - name: Clippy Pedantic and others
      run: cargo clippy --all-targets --all-features -- -D clippy::nursery -D clippy::all -D clippy::pedantic

  create-release:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (optional) Path to changelog.
          # changelog: CHANGELOG.md
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets-generic:
    needs:
      - create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: partialzip
          # (optional) Target triple, default is host triple.
          target: ${{ matrix.target }}
          # (optional) On which platform to distribute the `.tar.gz` file.
          # [default value: unix]
          # [possible values: all, unix, windows, none]
          tar: unix
          # (optional) On which platform to distribute the `.zip` file.
          # [default value: windows]
          # [possible values: all, unix, windows, none]
          zip: windows
          # (optional) Build with the given set of features if any.
          features: ${{ matrix.features || '' }}
          #     - $tag    - Tag of this release.
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets-custom-linux:
    needs:
      - create-release
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        image:
          - "ubuntu:18.04"        # gcc  7.5.0, clang  6.0.0, cmake 3.10.2
          - "ubuntu:20.04"        # gcc  9.3.0, clang 10.0.0, cmake 3.16.3
          - "ubuntu:22.04"        # gcc 12.2.0, clang 15.0.7, cmake 3.24.2
          - "debian:buster"       # gcc  8.3.0, clang  7.0.1, cmake 3.13.4
          - "debian:bullseye"     # gcc 10.2.1, clang 11.0.1, cmake 3.18.4
          - "debian:bookworm"     # gcc 12.2.0, clang 15.0.6, cmake 3.25.1
          - "debian:testing"
          - "debian:experimental"
          - "fedora:35"           # gcc 11.2.1, clang 13.0.0, cmake 3.22.0
          - "fedora:36"           # gcc 12.2.1, clang 14.0.5, cmake 3.26.3
          - "fedora:37"           # gcc 12.3.1, clang 15.0.7, cmake 3.26.4
          - "fedora:38"           # gcc 13.0.1, clang 16.0.5, cmake 3.26.4
    container:
      image: ${{ matrix.image }}
      env:
        APT_LISTCHANGES_FRONTEND: none
        DEBIAN_FRONTEND: noninteractive
    runs-on: ubuntu-latest
    steps:
      - name: Prepare container (apt)
        shell: bash
        if: startsWith(matrix.image, 'debian:') || startsWith(matrix.image, 'ubuntu:')
        run: |
          apt-get update -qq
          apt-get install -yq \
            curl
      - name: Prepare container (dnf)
        shell: bash
        if: startsWith(matrix.image, 'fedora:')
        run: |
          dnf install --quiet --assumeyes \
              curl
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: partialzip
          # (optional) Target triple, default is host triple.
          target: x86_64-${{ matrix.image }}-gnu
          # (optional) On which platform to distribute the `.tar.gz` file.
          # [default value: unix]
          # [possible values: all, unix, windows, none]
          tar: unix
          # (optional) On which platform to distribute the `.zip` file.
          # [default value: windows]
          # [possible values: all, unix, windows, none]
          # (optional) Build with the given set of features if any.
          #     - $tag    - Tag of this release.
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
